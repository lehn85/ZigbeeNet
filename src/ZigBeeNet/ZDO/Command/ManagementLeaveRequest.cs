using System;
using System.Text;
using ZigBeeNet.Transaction;
using ZigBeeNet.ZCL;
using ZigBeeNet.ZCL.Protocol;

namespace ZigBeeNet.ZDO.Command
{
    /**
    * Management Leave Request value object class.
    * 
    * The Mgmt_Leave_req is generated from a Local Device requesting that a Remote
    * Device leave the network or to request that another device leave the network. The
    * Mgmt_Leave_req is generated by a management application which directs the
    * request to a Remote Device where the NLME-LEAVE.request is to be executed
    * using the parameter supplied by Mgmt_Leave_req.
    * 
*/

    public class ManagementLeaveRequest : ZdoRequest, IZigBeeTransactionMatcher
    {
        /**
        * DeviceAddress command message field.
        */
        public IeeeAddress DeviceAddress { get; set; }

        /**
        * RemoveChildren_Rejoin command message field.
        */
        public bool RemoveChildrenRejoin { get; set; }

        /**
        * Default constructor.
        */
        public ManagementLeaveRequest()
        {
            ClusterId = 0x0034;
        }

        /**
        * Gets DeviceAddress.
        *
        * @return the DeviceAddress
        */
        public IeeeAddress getDeviceAddress()
        {
            return DeviceAddress;
        }

        /**
        * Sets DeviceAddress.
        *
        * @param deviceAddress the DeviceAddress
        */
        public void setDeviceAddress(IeeeAddress deviceAddress)
        {
            this.DeviceAddress = deviceAddress;
        }

        /**
        * Gets RemoveChildren_Rejoin.
        *
        * @return the RemoveChildren_Rejoin
        */
        public Boolean getRemoveChildrenRejoin()
        {
            return RemoveChildrenRejoin;
        }

        /**
        * Sets RemoveChildren_Rejoin.
        *
        * @param removeChildrenRejoin the RemoveChildren_Rejoin
        */
        public void setRemoveChildrenRejoin(Boolean removeChildrenRejoin)
        {
            this.RemoveChildrenRejoin = removeChildrenRejoin;
        }

        public override void Serialize(ZclFieldSerializer serializer)
        {
            base.Serialize(serializer);

            serializer.Serialize(DeviceAddress, ZclDataType.Get(DataType.IEEE_ADDRESS));
            serializer.Serialize(RemoveChildrenRejoin, ZclDataType.Get(DataType.BOOLEAN));
        }

        public override void Deserialize(ZclFieldDeserializer deserializer)
        {
            base.Deserialize(deserializer);

            DeviceAddress = (IeeeAddress)deserializer.Deserialize(ZclDataType.Get(DataType.IEEE_ADDRESS));
            RemoveChildrenRejoin = (bool)deserializer.Deserialize(ZclDataType.Get(DataType.BOOLEAN));
        }

        public bool IsTransactionMatch(ZigBeeCommand request, ZigBeeCommand response)
        {
            if (!(response is ManagementLeaveResponse))
            {
                return false;
            }

            return ((ManagementLeaveRequest)request).DestinationAddress.Equals(((ManagementLeaveResponse)response).SourceAddress);
        }

        public override string ToString()
        {
            StringBuilder builder = new StringBuilder();

            builder.Append("ManagementLeaveRequest [")
                   .Append(base.ToString())
                   .Append(", deviceAddress=")
                   .Append(DeviceAddress)
                   .Append(", removeChildrenRejoin=")
                   .Append(RemoveChildrenRejoin)
                   .Append(']');

            return builder.ToString();
        }

    }
}
