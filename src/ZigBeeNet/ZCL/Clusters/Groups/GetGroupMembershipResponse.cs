// License text here
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using ZigBeeNet.ZCL.Protocol;
using ZigBeeNet.ZCL.Field;
using ZigBeeNet.ZCL.Clusters.Groups;

/**
 * Get Group Membership Response value object class.
 *
 * Cluster: Groups. Command is sentFROM the server.
 * This command is a specific command used for the Groups cluster.
 *
 * Code is auto-generated. Modifications may be overwritten!
 */

/* Autogenerated: 14.02.2019 - 18:41 */
namespace ZigBeeNet.ZCL.Clusters.Groups
{
   public class GetGroupMembershipResponse : ZclCommand
   {
           /**
           * Capacity command message field.
           */
           public byte Capacity { get; set; }

           /**
           * Group count command message field.
           */
           public byte GroupCount { get; set; }

           /**
           * Group list command message field.
           */
           public List<ushort> GroupList { get; set; }


           /**
           * Default constructor.
           */
           public GetGroupMembershipResponse()
           {
               GenericCommand = false;
               ClusterId = 4;
               CommandId = 2;
               CommandDirection = ZclCommandDirection.SERVER_TO_CLIENT;
    }

    public override void Serialize(ZclFieldSerializer serializer)
    {
        serializer.Serialize(Capacity, ZclDataType.Get(DataType.UNSIGNED_8_BIT_INTEGER));
        serializer.Serialize(GroupCount, ZclDataType.Get(DataType.UNSIGNED_8_BIT_INTEGER));
        serializer.Serialize(GroupList, ZclDataType.Get(DataType.N_X_UNSIGNED_16_BIT_INTEGER));
    }

    public override void Deserialize(ZclFieldDeserializer deserializer)
    {
        Capacity = deserializer.Deserialize<byte>(ZclDataType.Get(DataType.UNSIGNED_8_BIT_INTEGER));
        GroupCount = deserializer.Deserialize<byte>(ZclDataType.Get(DataType.UNSIGNED_8_BIT_INTEGER));
        GroupList = deserializer.Deserialize<List<ushort>>(ZclDataType.Get(DataType.N_X_UNSIGNED_16_BIT_INTEGER));
    }

       public override string ToString()
       {
           var builder = new StringBuilder();

           builder.Append("GetGroupMembershipResponse [");
           builder.Append(base.ToString());
           builder.Append(", Capacity=");
           builder.Append(Capacity);
           builder.Append(", GroupCount=");
           builder.Append(GroupCount);
           builder.Append(", GroupList=");
           builder.Append(GroupList);
           builder.Append(']');

           return builder.ToString();
       }

   }
}
