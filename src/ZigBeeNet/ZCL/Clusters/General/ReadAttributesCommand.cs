// License text here
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using ZigBeeNet.ZCL.Protocol;
using ZigBeeNet.ZCL.Field;
using ZigBeeNet.ZCL.Clusters.General;

/**
 * Read Attributes Command value object class.
 *
 * Cluster: General. Command is sentTO the server.
 * This command is a generic command used across the profile.
 *
 * The read attributes command is generated when a device wishes to determine the * values of one or more attributes located on another device. Each attribute * identifier field shall contain the identifier of the attribute to be read. *
 * Code is auto-generated. Modifications may be overwritten!
 */

/* Autogenerated: 14.02.2019 - 18:41 */
namespace ZigBeeNet.ZCL.Clusters.General
{
   public class ReadAttributesCommand : ZclCommand
   {
           /**
           * Identifiers command message field.
           */
           public List<ushort> Identifiers { get; set; }


           /**
           * Default constructor.
           */
           public ReadAttributesCommand()
           {
               GenericCommand = true;
               CommandId = 0;
               CommandDirection = ZclCommandDirection.CLIENT_TO_SERVER;
    }

    public override void Serialize(ZclFieldSerializer serializer)
    {
        serializer.Serialize(Identifiers, ZclDataType.Get(DataType.N_X_ATTRIBUTE_IDENTIFIER));
    }

    public override void Deserialize(ZclFieldDeserializer deserializer)
    {
        Identifiers = deserializer.Deserialize<List<ushort>>(ZclDataType.Get(DataType.N_X_ATTRIBUTE_IDENTIFIER));
    }

       public override string ToString()
       {
           var builder = new StringBuilder();

           builder.Append("ReadAttributesCommand [");
           builder.Append(base.ToString());
           builder.Append(", Identifiers=");
           builder.Append(Identifiers);
           builder.Append(']');

           return builder.ToString();
       }

   }
}
